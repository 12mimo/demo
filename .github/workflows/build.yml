name: Build and Release Python App

on:
  push:
    branches:
      - main  # 触发操作的分支
  pull_request:
    branches:
      - main  # 触发操作的分支

jobs:
  build:
    runs-on: macos-latest  # 选择 macOS 作为构建环境

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # 拉取仓库代码

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.13'  # 设置 Python 版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # 安装项目依赖

    - name: Install PyInstaller
      run: pip install pyinstaller  # 安装 PyInstaller

    - name: Build macOS application
      run: |
        arch -arm64 pyinstaller --onefile --distpath ./dist/mac --workpath ./build/mac --name demo --windowed main.py  # 为 ARM64 架构打包

    - name: Upload macOS build artifact
      uses: actions/upload-artifact@v4  # 上传打包后的文件作为 GitHub 工件
      with:
        name: macOS-build
        path: ./dist/mac/demo

  create_release:
    runs-on: ubuntu-latest  # 运行环境选择 Ubuntu

    needs: build  # 确保构建成功后再执行创建 Release

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create Git tag
      run: |
        TAG_NAME=v1.0.0  # 可以根据需要修改版本号
        git tag $TAG_NAME  # 创建 Git 标签
        git push origin $TAG_NAME  # 将标签推送到远程仓库

    - name: Set up GitHub release
      uses: softprops/action-gh-release@v1  # 使用 GitHub Releases Action

    - name: Upload release assets
      run: |
        mkdir -p release_assets
        cp ./dist/mac/demo release_assets/
        gh release create v1.0.0 ./release_assets/* --title "First release" --notes "Initial release of the demo app"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub Token
